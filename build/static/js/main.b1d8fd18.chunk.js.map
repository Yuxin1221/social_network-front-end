{"version":3,"sources":["actions.js","components/main/Following.js","Fetch.js","reducers.js","components/auth/Login.js","components/auth/Registerform.js","components/auth/Landing.js","components/main/Headline.js","components/main/Navigation.js","components/article/Articlebody.js","components/article/PostArticle.js","components/article/Article.js","components/main/main.js","components/profile/NavPro.js","components/profile/Avator.js","components/profile/profile.js","App.js","index.js"],"names":["CHANGE_PAGE","GET_USERS","UPDATE_USERS","NEW_USER","UPDATE_FOLLOWERS","ADD_FOLLOWERS","DELETE_FOLLOWERS","UPDATE_POST","GET_POST","ADD_POST","CLEARPOSTS","CHANEG_HEADLLINE","CLEAR_FOLLOWERS","changepage","type","getUsers","users","updateusers","user","newuser","updatefollowers","deletefollowers","accountname","addfollowers","delPostFollowers","updatepost","post","addpost","getpost","posts","clearposts","changeheadline","headline","Following","state","notfound","pushUser","getAllFollowers","fetch","url","method","credentials","headers","then","res","status","json","text","result","props","follow","following","name","username","account","catch","err","unfollow","evt","target","id","setImmediate","Add","followers","filter","ele","length","setState","userInfo","Change","value","this","style","margin","padding","map","subscript","Math","floor","random","src","alt","height","width","className","onClick","ref","c","Birth","onChange","placeholder","Component","connect","dispatch","Fetch","this_object","scope","exist","localStorage","getItem","JSON","parse","i","obj","password","address","street","email","phone","birthdate","company","catchPhrase","zipcode","followed","push","setItem","stringify","body","endpoint","initial_state","isLogin","Presentpost","avatar","Changeheadline","window","Reducer","preState","action","Object","assign","new_follow_user","newuserInfo","newusers","Login","errMsg","Myname","Mypassword","CheckisValidaty","preventDefault","errorMsg","console","log","dob","changename","bind","changepassword","Password","Registerform","errInfo","ERROR","ACCOUNT","EMIAL","PHONE","BRITH","ZIPCODE","PASSWORD","CP","isAdult","birthday","split","birYear","birMonth","birDate","today","Date","getFullYear","getMonth","getDate","Y","M","Name","Email","Phone","Zipcode","Cp","mark","notice","validity","patternMismatch","checkifChange","pattern","Allfill","display","addRegister","errNotice","errRegInfo","Landing","login","isprofile","Headline","handleHeadlineChange","phrase","Navigation","logout","removeItem","to","Comment","require","articles","input","data","btnVal","editComment","pid","old","time","updateComment","btn","span","border","borderRadius","handleChange","flexDirection","Articlesbody","Keywords","handleComment","handleCommentSubmit","comment","undefined","commentId","now","from","handleEditChange","handleEditSubmit","dosearch","keywords","author","content","includes","feed","comments","_id","filterkeywords","image","title","variant","created","PostArticle","myself_post","tmpImage","clear","words","updatePosts","clearPost","Post","curImg","update","cols","rows","article","Articlebody","followings","NavPro","profile","newNameVal","newEmailVal","newPhoneVal","newZipcodeVal","newBirthVal","newPasswordVal","newPassword","repeat","updatedName","updatedEmail","updatedPhone","updatedZipcode","updateBirth","updatedPassword","BIRTH","handleChangeUserName","handleChangeEmail","handleChangePhone","handleChangeBirth","handleChangeZipcode","handleChangePassword","required","errUpdate","App","exact","path","render","ismain","logger","createLogger","store","createStore","applyMiddleware","document","getElementById"],"mappings":"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","file":"static/js/main.b1d8fd18.chunk.js","sourcesContent":["export const CHANGE_PAGE=\"CHANGE_PAGE\"\nexport const CHANGE_TO_PORFILE=\"CHANGE_TO_PROFILE\"\nexport const CHANGE_TO_MAIN=\"CHANGE_TO_MAIN\"\nexport const GET_USERS=\"GET_USERS\"\nexport const UPDATE_USERS=\"UPDATE_USERS\"\nexport const NEW_USER=\"NEW_USER\"\n//followers\nexport const UPDATE_FOLLOWERS=\"UPDATE_FOLLOWERS\"\nexport const ADD_FOLLOWERS=\"ADD_FOLLOWERS\"\nexport const DELETE_FOLLOWERS=\"DELETE_FOLLOWERS\"\n///post\nexport const UPDATE_POST=\"UPDATE_POST\"\nexport const GET_POST=\"GET_POST\"\nexport const ADD_POST=\"ADD_POST\"\nexport const CLEARPOSTS=\"CLEAR_POSTS\"\n//headline\nexport const CHANEG_HEADLLINE=\"CHNAGE_HEADLINE\"\n//clear \nexport const CLEAR_FOLLOWERS='CLEAR FOLLOWERS'\n//\n\n\n\nexport function changepage(){\n    return{type: CHANGE_PAGE}\n}\nexport function changetoprofile(){\n    return{type: CHANGE_TO_PORFILE}\n}\nexport function changetomain(){\n    return{type: CHANGE_TO_MAIN}\n}\nexport function getUsers(users){\n    return{type:GET_USERS,users}\n}\nexport function updateusers(user){\n    return{type:UPDATE_USERS,user}\n}\nexport function newuser(user){\n    return{type:NEW_USER,user}\n}\n//followers\nexport function updatefollowers(users){\n    return{type:UPDATE_FOLLOWERS,users}\n}\n\nexport function deletefollowers(accountname){\n    return{type:DELETE_FOLLOWERS,accountname}\n}\n\nexport function addfollowers(user){\n    return{type:ADD_FOLLOWERS,user}\n}\nexport function delPostFollowers(){\n    return {type:CLEAR_FOLLOWERS}\n}\n\n//POST\nexport function updatepost(post){\n     return {type:UPDATE_POST,post}\n}\nexport function addpost(post){\n    return{ type:ADD_POST,post}\n}\nexport function getpost(posts){\n    return {type:GET_POST,posts}\n}\nexport function clearposts(){\n    return {type:CLEARPOSTS}\n}\n\n   \nexport function changeheadline(headline){\n return {type:CHANEG_HEADLLINE,headline}\n}\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { updatefollowers,deletefollowers,addfollowers,addpost, delPostFollowers, updatepost } from '../../actions'\nimport {url} from '../../Fetch'\n\nexport class Following extends Component {\n    componentDidMount() {\n        this.getAllFollowers()\n    }\n       state={notfound:\"\",pushUser:\"\"}\n\n    getAllFollowers=() =>{\n        fetch(url(\"/following\"), {\n            method: 'GET',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n        })\n        .then(res => {\n            if (res.status === 200)\n                return res.json();\n            else\n                return res.text();\n        })\n        .then(res => {\n            if (res.result && res.result === \"success\") {\n                this.props.delPostFollowers()\n                let follow = res.following;\n                for (let name of follow) {\n                    fetch(url(\"/headline/\" + name), {\n                        credentials: 'include',\n                        headers: { 'Content-Type': 'application/json' },\n                    }).then(res => {\n                        if (res.status === 200) return res.json();\n                        else return res.text();\n                    }).then(res => {\n                        if (res.result && res.result === 'success') {\n                            this.props.addfollowers({\n                                accountname: name,\n                                username: res.account,\n                                headline: res.headline,\n                            }) \n                        }\n                    })\n                }\n                fetch(url(\"/articles\" ), {\n                    credentials: 'include',\n                    headers: { 'Content-Type': 'application/json' },\n                }).then(res => {\n                    if (res.status === 200) return res.json();\n                    else return res.text();\n                }).then(res => {\n                    if (res.result && res.result === \"success\") {\n                        this.props.updatepost(res.posts);\n                    }\n                })\n            } \n        }).catch(err => {})\n        \n    }\n\n\n\n     unfollow=(evt)=>{\n        \n        fetch(url(\"/following/\" + evt.target.id), {\n            credentials: 'include',\n            method: \"DELETE\",\n            headers: {'Content-Type': 'application/json' },\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.props.deletefollowers(evt.target.id);\n                setImmediate(this.getAllFollowers(), 1000);\n            }\n        })\n     }\n\n     Add=()=>{\n        if (this.state.pushUser !== \"\") {\n            let user = this.props.followers.filter( ele => ele.accountname === this.state.pushUser)\n            if (user.length > 0) {\n                this.setState({notfound: \"You have followed this user\"});\n            } else if (this.props.userInfo.accountname === this.state.pushUser) {\n                this.setState({notfound: \"Don't folllow yourself\"});\n            } else {\n                fetch(url(\"/following/\" + this.state.pushUser), {\n                    credentials: 'include',\n                    method: \"PUT\",\n                    headers: {'Content-Type': 'application/json' },\n                })\n                .then(res => {\n                    if (res.status === 200) return res.json();\n                    else {\n                        this.setState({notfound: \"Not Found\"});\n                        return null;\n                    }\n                })\n                .then(res => {\n                    if (res) {\n                        this.getAllFollowers();\n                        this.setState({pushUser: \"\"})\n                    }\n                })\n            }\n        }\n        else\n            this.setState({notfound: \"Please input a username\"})\n     }\n\n     Change=(evt)=>{\n        this.setState({pushUser: evt.target.value})\n     }\n    render() {\n        return (\n         <div>\n             <div></div>\n             <h4 style={{margin: '0', padding: '0'}}>Followers</h4>\n            {this.props.followers.map((ele,subscript) => {\n                let id = Math.floor(Math.random() * 100);\n                let src = `https://picsum.photos/id/${id}/200/300`\n                return (\n                    <div key={subscript} >\n    \n                     <img alt=\"\" src={src} style={{margin: '10px', height: '150px', width: '150px'}}></img><br/>\n                     \n                        <div>\n                        <h5 style={{margin: '0', padding: '0'}}> Accountname:{ele.accountname}</h5>\n                        <p style={{margin: '0', padding: '0'}}>{ele.headline}</p>\n                        <button id=\"UNFOLLOW\"  className=\"btn\" onClick={this.unfollow} id={ele.accountname}>Unfollow</button>\n                        </div>\n\n                      \n                    </div>\n                    )\n            })}\n              <br></br>\n          <div>\n                  <div ref={(c)=>this.Birth= c }>{this.state.notfound}</div>\n                 <input onChange={this.Change} placeholder=\"follow using accountname\"></input>\n                    <button id=\"ADD\" className=\"btn\" onClick={this.Add}>add</button></div>\n        </div>\n        )\n    }\n}\n\n\nexport default connect(\n\n    state =>{\n        return {\n            users: state.users,\n            posts: state.posts,\n            userInfo: state.userInfo,\n            followers:state.followers\n\n    \n        }},\n        (dispatch) =>{\n            return {\n              \n                updatefollowers: (users) => dispatch(updatefollowers(users)),\n                addfollowers: (user) => dispatch(addfollowers(user)),\n                deletefollowers: (accountname) => dispatch(deletefollowers(accountname)),\n                addpost:(post)=>dispatch(addpost(post)),\n                delPostFollowers:()=>dispatch(delPostFollowers()),\n                updatepost:(post)=>dispatch(updatepost(post))\n                \n    \n\n            }\n        }\n    \n    \n        )(Following)\n\n        ","export function Fetch(this_object){\n    var scope=this_object\n    const exist=localStorage.getItem(\"users\")\n    const posts = localStorage.getItem(\"posts\")\n\n    if(!exist){\n        fetch(\"https://jsonplaceholder.typicode.com/users\").then(res=>res.json()).then(\n            res=>{\n                let users = []\n                for(let i=0; i<res.length;i++){\n                    let obj={\n                        accountname:res[i].username,\n                        password:res[i].address.street,\n                        email:res[i].email,\n                        phone:res[i].phone,\n                        name:res[i].name,\n                        birthdate:'2002-12-21',\n                        headline: res[i].company.catchPhrase,\n                        zipcode: res[i].address.zipcode,\n                        followed:[\n                            res[(i+1) % res.length].username,\n                            res[(i+2) % res.length].username,\n                            res[(i+3) % res.length].username,\n                        ]\n                    }\n                    //push the these object (json) into array\n                    users.push(obj)\n                }\n                //object ->string\n                localStorage.setItem(\"users\",JSON.stringify(users))\n                scope.props.getUsers(users)\n            }\n        )\n    } \n    else{\n     scope.props.getUsers(JSON.parse(exist))\n    }\n\n\n\n\n    if (!posts) {\n      \n            fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json())\n            .then(res => {\n                scope.props.getpost(res.map(ele => ele.body));\n                localStorage.setItem('posts', JSON.stringify(res.map(ele => ele.body)))\n            });\n    } else {\n        scope.props.getpost(JSON.parse(posts))\n    }\n}\n\nexport function url(endpoint){ \n    return `https://yk60-final.herokuapp.com${endpoint}`\n};","\n\nimport {  CHANGE_PAGE,GET_USERS,UPDATE_USERS,NEW_USER\n, ADD_FOLLOWERS,DELETE_FOLLOWERS,UPDATE_FOLLOWERS,\nADD_POST,GET_POST,UPDATE_POST,CHANEG_HEADLLINE,CLEAR_FOLLOWERS, CLEARPOSTS}from './actions'\n\n\nconst initial_state={ \n   isLogin:false,\n   users:[],\n   followers:[],\n   Presentpost:[],\n   posts:[],\n   userInfo: {accountname: \"\",username: \"\",email: \"\",phone: \"\",birthdate: \"\",zipcode: \"\",password: \"\",headline: \"\",avatar:\"\", followed: []}\n\n}\n//user is an object\n\n//change the headline to locastorage\nfunction Changeheadline(state) {\n    window.localStorage.setItem('users', JSON.stringify(state.users));\n    window.localStorage.setItem('currentUser', JSON.stringify(state.userInfo));\n}\n\nconst Reducer =(preState=initial_state,action)=>{\n\tswitch (action.type){\n\t\t//update our company phras\n            \n\t    case CHANGE_PAGE:\n            return {...preState, isLogin:!preState.isLogin}\n\t\tcase GET_USERS:\n\t\t\treturn {...preState, users: action.users}\n\t\tcase UPDATE_USERS:\n\t\t\treturn {...preState, userInfo: Object.assign(preState.userInfo, action.user)}\n\t\tcase NEW_USER:\n\t\t\tlocalStorage.setItem(\"users\", JSON.stringify([...preState.users, action.user]));\n\t\t\treturn {...preState, users: [...preState.users, action.user]}\n\t\tcase UPDATE_FOLLOWERS:\n\t\t\treturn {...preState, followers: action.users}\n\t\tcase ADD_FOLLOWERS:\n/* \t\t\tlet user = preState.users.filter(user => user.accountname === action.user.accountname)\n            if (user.length > 0)\n                return {...preState, followers: [...preState.followers, ...user]}\n            else\n                return {...preState} */\n\t\t\t\tlet new_follow_user = preState.followers.filter(ele => ele.accountname !== action.user.accountname)\n\t\t\t\treturn {...preState, followers: [...new_follow_user, action.user]}\n\n\t\tcase DELETE_FOLLOWERS:\n\t\t\treturn {...preState, followers: preState.followers.filter(ele => ele.accountname !== action.accountname),\n\t\t\t\tPresentpost: preState.Presentpost.filter(ele => ele.accountname !== action.accountname)}\n\t\tcase CLEAR_FOLLOWERS:\n\t\t\treturn {...preState, Presentpost: [], followers: []};\n\t\tcase GET_POST:\n\t\t\treturn {...preState, posts: action.posts}\n\t\tcase ADD_POST:\n\t\t\t\n\t\t\treturn {...preState, Presentpost: [action.post,...preState.Presentpost]}\n\t\tcase UPDATE_POST:\n\t\t\treturn {...preState,Presentpost:action.post}\n\t\tcase CHANEG_HEADLLINE:\n\t\t\tvar newuserInfo = preState.userInfo\n            let newusers = preState.users\n            newuserInfo.headline = action.headline\n            for (let i=0; i<newusers.length; i++) {\n                if (newusers[i].accountname === newuserInfo.accountname) {\n                    newusers[i] = newuserInfo;\n                    break;\n                }\n            }\n            Changeheadline(preState)\n\t\t\treturn {...preState, userInfo: newuserInfo, users: newusers}\n\t\tcase CLEARPOSTS:\n\t\t\treturn{\n\t\t\t\t...preState,Presentpost:[]\n\t\t\t}\n\t\tdefault:\n\t\t\treturn preState\n\t\t\n\t}\n}\n\nexport default (Reducer)","\nimport { connect } from 'react-redux'\nimport {url} from '../../Fetch' \n\nimport React, { Component } from 'react'\nimport { changepage, changetomain, updateusers } from '../../actions'\n\nexport  class Login extends Component {\n    state={errMsg:'',Myname:\"\",Mypassword:\"\"}\n    constructor (props) {\n        super(props);\n        this.changename = this.changename.bind(this);\n        this.changepassword = this.changepassword.bind(this);\n    }\n\n\n\n CheckisValidaty=(evt)=>{\n    /* this.props.changepage();\n    this.props.changetomain() */\n\n    if(this.state.Myname===\"\"||this.state.value===\"\")\n    {\n       this.setState({errMsg:'Please input both your name and password'})\n      \n    }\n    else{\n        evt.preventDefault();\n        this.setState({errorMsg:\"\"})\n        fetch(url('/login'),{\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n              'account': this.state.Myname,\n              'password': this.state.Mypassword\n          })\n        }).then(res=>{\n            if(res.status===200){\n                return res.json();\n            }\n            else{\n                return res.text()\n            }\n        }).then(res=>{\n            if(res.result&&res.result==='success'){\n                fetch(url('/profile'),{\n                  method: 'GET',\n                  credentials: 'include',\n                  headers: { 'Content-Type': 'application/json' }\n                }).then(res=>{\n                  if (res.status === 200) {\n                      return res.json();\n                      }\n                      else {\n                      // logout\n                      this.props.changepage();\n                      return null;\n                      }\n      \n                }).then(res=>{\n                  if (res) {\n                      console.log(res)\n                      this.props.updateusers({\n                        //   accountname: res.account,\n                          username:res.account,\n                          email: res.email,\n                          phone: res.phone,\n                          birthdate: res.dob,\n                          zipcode: res.zipcode,\n                          password: res.password,\n                          headline: res.headline,\n                          avatar: res.avatar,\n                          followed: res.following\n                      })\n                      this.props.changepage();\n                  }\n      \n                }).catch(err=>{\n                    console.log(err)\n                })\n            }\n            else{\n                this.setState({errMsg:'User do not exist, please input an correct account'})\n            }\n        })\n    }\n\n\n\n\n\n\n\n \n}\n\n\n\n\n\n    changename(evt){\n            this.setState({Myname:evt.target.value})\n       }\n\n\n    changepassword(evt){\n        this.setState({Mypassword:evt.target.value})\n\n    }\n    render() {\n\n        return (\n            <div id=\"box\">  \n        {/* login  */}\n            <div >\n                <h2>Log in </h2>\n            </div>\n          \n           <label className=\"instruction\">Username:</label><br/>\n            <div className=\"userinput\">\n                <input value={this.state.Myname} id=\"testUsername\" onChange={this.changename} className=\"userinput\" name=\"username\" type=\"text\" placeholder=\"Username\" />\n            </div>\n\n            <label ref={(c)=>this.Password= c} className=\"instruction\">Password:</label><br/>\n            <div className=\"userinput\">\n                <input onChange={this.changepassword} value={this.state.Mypassword} id=\"testPassword\" className=\"userinput\" name=\"password\" type=\"password\" placeholder=\"****\" />\n            </div>\n\n            \n            <div className=\"Button\" >\n                <input id=\"submitLogin\" className=\"btn\" type=\"button\" value=\"Log In\" \n                onClick={this.CheckisValidaty} />\n            </div>\n            <div className=\"error\">{this.state.errMsg}</div>\n\n\n \n    </div>\n        )\n    }\n}\n\n\n\nexport default connect(\n\n    state =>{\n        return {\n            isLogin: state.isLogin,\n            users: state.users,\n             posts: state.posts\n    \n        }},\n        (dispatch) =>{\n            return {\n                changepage: () => dispatch(changepage()),\n                updateusers:(user)=>dispatch(updateusers(user))     \n            }\n        }\n    \n    \n        )(Login)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { changepage, newuser,updateusers} from '../../actions'\nimport {url} from '../../Fetch'\nexport class Registerform extends Component {\n\n   state={errInfo:\"\",ERROR:\"\",ACCOUNT:\"\",EMIAL:\"\",PHONE:\"\",BRITH:\"\",ZIPCODE:\"\",PASSWORD:\"\",CP:\"\"}\n//decide whether going to the main page if all above condition is satisfied\n    isAdult=(birthday)=>{\n    let [birYear, birMonth, birDate] = birthday.split(\"-\");\n    let today = new Date();\n    let [Y,M,D] = [today.getFullYear(), today.getMonth() + 1, today.getDate()];\n    if(Y - birYear < 18){\n        return false;\n    }else if(Y - birYear === 18){\n        if(M - birMonth < 0){\n            return false;\n        }else if(M - birMonth === 0){\n            if(D - birDate < 0){\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n\n    CheckisValidaty=()=>{\n        const{Name,Email,Phone,Password,Zipcode,Birth,Cp,isAdult}=this\n       \n          var mark=true;\n          var notice=\"\"\n          if(Name.validity.patternMismatch)\n           {       \n            notice+=\"Please input a name using letter or numbers with letter start only, \";mark=false  \n            \n           }\n           if(Email.validity.patternMismatch)\n           {\n              notice+=\"please input a email such as a@b.com, \"; mark=false  \n           }\n       \n           if(Phone.validity.patternMismatch)\n           {\n               notice+=\"please input phone number such as 111-111-1111, \"; mark=false  \n           }\n        \n           if(Zipcode.validity.patternMismatch)\n           {\n               notice+=\"please input a zipcode contains five digits, \";mark=false  \n           }\n       \n           if(this.state.PASSWORD!==this.state.CP)\n           {\n            this.setState({ERROR:\"Password must be matched\"})\n               mark=false  \n           }\n           if(Name.value===\"\"||Name===null||Email.value===\"\"||Phone.value===\"\"||Birth===\"\"||Zipcode===\"\"||Password===\"\"||Cp===\"\"||Email.value===null||Phone.value===null||Birth===null||Zipcode===null||Password===null||Cp===null)\n           {\n               notice+=\"please make sure all is filled, \"\n                mark=false  \n           }\n           if(!isAdult(this.state.BRITH))\n            {\n               this.setState({ERROR:\"You cannot register under 18 years old\"})\n               mark=false\n            }\n   \n        \n            let obj = {\n                account: this.state.ACCOUNT,\n                username:this.state.ACCOUNT,\n                email: this.state.EMIAL,\n                phone: this.state.PHONE,\n                birthdate: this.state.BRITH,\n                zipcode: this.state.ZIPCODE,\n                headline: \"I'm \" + this.state.ACCOUNT,\n                avatar:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRsqz9MnPJ35eUCWZeGAQc3UcQQ982UywRBKA&usqp=CAU',\n                password: this.state.PASSWORD,\n                \n            }\n\n           if(mark)\n           {  \n            fetch(url('/register'), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(obj)\n            }).then (res => {\n                if (res.status === 200)\n                    return res.json();\n                else\n                    return res.text();\n            }).then (res => {\n                if (res.result && res.result === \"success\") {\n                    fetch(url('/login'), {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        credentials: 'include',\n                        body: JSON.stringify({\n                            'account': obj.account,\n                            'password': obj.password\n                        })\n                    }).then (res => {\n                        if (res.status === 200)\n                            return res.json();\n                        else\n                            return res.text();\n                    }).then (res => {\n                        console.log(res);\n                        if (res.result && res.result === \"success\") {\n                            this.props.updateusers({\n                                accountname: obj.account,\n                                username:obj.username,\n                                email: obj.email,\n                                phone: obj.phone,\n                                birthdate: obj.birthdate,\n                                zipcode: obj.zipcode,\n                                password: obj.password,\n                                headline: obj.headline,\n                                avatar: obj.avatar,\n                                followed: []\n                              })\n                            this.props.changepage();\n                        }\n                    })\n                } \n            }).catch(err=>{\n                console.log(err)\n            })\n             \n            this.setState({errInfo:\"You register successfully!\"})      \n            \n           }\n           else{\n               this.setState({errInfo:notice})    \n           }\n         \n       }\n\n       checkifChange=(evt,ele)=>{\n           if(ele===\"acc\"){\n               this.setState({ACCOUNT:evt.target.value})\n           }\n           if(ele===\"ema\"){\n            this.setState({EMIAL:evt.target.value})\n            }\n            if(ele===\"pho\"){\n                this.setState({PHONE:evt.target.value})\n            }\n            if(ele===\"bir\"){\n                this.setState({BRITH:evt.target.value})\n            }\n            if(ele===\"zip\"){\n                this.setState({ZIPCODE:evt.target.value})\n            }\n            if(ele===\"pas\"){\n                this.setState({PASSWORD:evt.target.value})\n            }\n            if(ele===\"cp\"){\n                this.setState({CP:evt.target.value})\n            }\n\n\n       }\n    render() {\n        return (\n            <div className=\"box\">      \n            <h2>Create a new account</h2>\n           <form>\n   \n           <label className=\"instruction\">Username:</label><br/>\n               <div className=\"userinput\">\n                   <input value={this.state.ACCOUNT} id=\"Myname\" onChange={(evt)=>this.checkifChange(evt,\"acc\")} ref={(c)=>this.Name = c } className=\"userinput\" name=\"username\" type=\"text\" placeholder=\"Username\" pattern=\"[A-Za-z]+[A-Za-z0-9]*\"/>\n   \n               </div>\n                               \n           <label className=\"instruction\">Email adress:</label><br/>\n              <div className=\"userinput\">\n                   <input id=\"Myemail\" value={this.state.EMIAL} onChange={(evt)=>this.checkifChange(evt,\"ema\")}   ref={(c)=>this.Email= c } className=\"userinput\" name=\"email\" type=\"email\" placeholder=\"a@b.com\" pattern=\"^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$\"/>\n             \n               </div>\n       \n   \n               <label className=\"instruction\">Phone number:</label><br/>\n              <div className=\"userinput\">\n                   <input id=\"Myphone\" value={this.state.PHONE} onChange={(evt)=>this.checkifChange(evt,\"pho\")}  ref={(c)=>this.Phone= c } className=\"userinput\" name=\"phone\" type=\"tel\" placeholder=\"000-000-0000\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"/>\n         \n               </div>\n   \n               <label className=\"instruction\">Date Of Birth:</label><br/>\n              <div className=\"userinput\">\n                   <input id=\"Mybirth\" value={this.state.BRITH} onChange={(evt)=>this.checkifChange(evt,\"bir\")}   ref={(c)=>this.Birth= c } className=\"userinput\" name=\"birth\" type=\"date\" placeholder=\"01/02/20\" pattern=\"\\d\\d\\d\"/>\n     \n               </div>\n   \n               <label className=\"instruction\">Zipcode:</label><br/>\n              <div className=\"userinput\">\n                   <input id=\"Myzipcode\" value={this.state.ZIPCODE} onChange={(evt)=>this.checkifChange(evt,\"zip\")}   ref={(c)=>this.Zipcode= c } className=\"userinput\" name=\"zipcode\" type=\"text\" placeholder=\"00000\" pattern=\"[0-9]{5}\"/>\n   \n               </div>\n   \n               <label className=\"instruction\">Password:</label><br/>\n              <div className=\"userinput\">\n                   <input id=\"Mypassword\" value={this.state.PASSWORD} onChange={(evt)=>this.checkifChange(evt,\"pas\")}   ref={(c)=>this.Password= c } className=\"userinput\" name=\"password\" type=\"password\" placeholder=\"****\" />\n               </div>\n   \n   \n               <label className=\"instruction\">Confirmation Password:</label><br/>\n              <div className=\"userinput\">\n                   <input id=\"Mycp\" value={this.state.Cp}  onChange={(evt)=>this.checkifChange(evt,\"cp\")}  ref={(c)=>this.Cp= c } className=\"userinput\" name=\"confirmation_password\" type=\"password\" placeholder=\"****\" />\n   \n               </div>\n   \n   \n            <div className=\"Button\">\n            <input id=\"check\" className=\"btn\" type=\"button\" value=\"Register\" onClick={this.CheckisValidaty} />\n            <input className=\"btn\" type=\"reset\" value=\"Clear\" />\n            <div id=\"ErrorInfo\" className=\"error\">{this.state.errInfo}</div>\n            <div id=\"ERROR\" className=\"error\">{this.state.ERROR}</div>\n\n             </div>\n             <div ref={(c)=>this.Allfill= c} className=\"ErrorMessage\" style={{display:\"none\"}}>Please make sure all information is filled</div><br/>\n            \n   \n                \n       \n           </form>\n       </div>\n        )\n    }\n}\n\n\n\nexport default connect(\n\n    state =>{\n        return {\n    \n            users:state.users\n    \n        }},\n        (dispatch) =>{\n            return {\n                changepage: () => dispatch(changepage()),\n                addRegister:(user)=>dispatch({type:\"allow_register\",user})  ,  \n                errNotice:(errRegInfo)=>dispatch({type:\"Register_error\",errRegInfo}),\n                newuser: (user) => dispatch(newuser(user)),\n                updateusers:(user)=>dispatch(updateusers(user))\n\n            }\n        }\n    \n    \n        )(Registerform)","import {connect} from 'react-redux'\nimport Login from './Login'\nimport Registerform from './Registerform'\nimport {Fetch} from '../../Fetch'\nimport React, { Component } from 'react'\nimport { getUsers, updateusers,changepage,getpost } from '../../actions'\n\nexport  class Landing extends Component {\n    componentDidMount(){\n        Fetch(this);\n        let login = JSON.parse(window.localStorage.getItem('login'))\n        let user = JSON.parse(window.localStorage.getItem('currentUser'))\n        if (login && user) {\n            this.props.updateusers(user)\n            this.props.changepage()\n            \n          /*   this.props.updateUserInfo(user); */\n          /*   this.props.changeLoginStatus(); */\n        }\n    } \n\n\n    render() {\n        return (\n        <div className=\"bigBox\">\n        <h1>Welcome to the landing page!</h1>\n        <div className =\"bigbox\">\n             <div className=\"box\">\n                    <Login/><br/><br/><br/>\n              </div>\n\n              <div className=\"box\">\n                    <Registerform/>\n              \n              </div>\n       </div>\n \n    </div>\n        )\n    }\n}\n\n\nexport default connect(\n\n    state=>{\n        return{\n            isLogin: state.isLogin,\n            isprofile:state.isprofile,\n            posts:state.posts\n        }\n    },\n    dispatch =>{\n        return{\n            getUsers: (users) => dispatch(getUsers(users)),\n            updateusers:(user)=>dispatch(updateusers(user)) ,\n            getpost:(posts)=>dispatch(getpost(posts)),\n            changepage: ()=> dispatch(changepage())\n        /*  changetoprofile:()=>dispatch(changetoprofile()),\n       ,\n         changetomain:()=>dispatch(changetomain()) */\n        }\n      \n    }\n\n\n    )(Landing)\n\n\n\n\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { changeheadline } from '../../actions'\nimport {url} from '../../Fetch'\n\nexport class Headline extends Component {\n   \n       state={headline:\"\"}\n  \n       //////click two time change headline???\n       changeheadline=()=>{\n        fetch(url(\"/headline\"), {\n            method: \"PUT\",\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({headline: this.state.headline})\n        })\n        this.props.changeheadline(this.state.headline);\n        this.setState({headline: \"\"});\n         \n       }\n       handleHeadlineChange=(evt) =>{\n        this.setState({headline: evt.target.value});\n    }\n\n\n       render() {\n              return (\n              <div >  \n                   <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRsqz9MnPJ35eUCWZeGAQc3UcQQ982UywRBKA&usqp=CAU\"/>\n                   <div>Hi! I am {this.props.userInfo.accountname}</div>\n              <div  ref={(c)=>this.headline= c}>{this.props.userInfo.headline}</div>\n              <input value={this.state.headline} onChange={this.handleHeadlineChange} className=\"feed\" placeholder=\"please update your headline here!\" ref={(c)=>this.phrase= c} className=\"headline\" type=\"text\"/><br></br>\n              <input className=\"btn\" onClick={this.changeheadline}    type=\"submit\" value=\"Update\" />\n        </div>\n              )\n       }\n}\nexport default connect(\n\n       state =>{\n           return {\n              userInfo:state.userInfo\n           }},\n           (dispatch) =>{\n               return {\n                changeheadline:(headline)=>dispatch(changeheadline(headline))\n               }\n           }\n       \n       \n )(Headline)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { changepage, getUsers, newuser } from '../../actions'\nimport {Link} from 'react-router-dom'\n\n\nexport  class Navigation extends Component {\n\n   logout=()=>{\n         localStorage.removeItem('currentUser');\n          localStorage.setItem('login', false);\n        this.props.changepage();\n   }\n   \n\n    render() {\n        return (\n            <div>\n              <Link id=\"log_out\" onClick={this.logout} className=\"btn\" to={'./'}>Log out</Link>\n              <Link className=\"btn\" to={'./profile'}>Profile</Link>\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default connect(\n    state=>{\n        return{\n            isLogin: state.isLogin,\n           \n        }\n    },\n    dispatch =>{\n        return{\n       \n         changepage:()=>dispatch(changepage()),\n       \n        }\n      \n    }\n\n\n\n)(Navigation)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport { getpost, updatepost } from '../../actions'\nimport { url} from '../../Fetch'\n\nconst articlesInfo = require('../../data/articles.json')\nconst articles = articlesInfo.articles\n//the basic sturcture for each piece of article\n\nclass Comment extends Component {\n state = {input: this.props.data.text,btnVal: \"edit\"}\n     \n    editComment=()=> {\n        if (this.state.btnVal === \"edit\") {\n            this.setState({btnVal: \"done\"});\n        }\n        else {\n            fetch(url(\"/articles/\" + this.props.pid), {\n                method: \"PUT\",\n                headers: { 'Content-Type': 'application/json' },\n                credentials: 'include',\n                body: JSON.stringify({\n                    old: {\n                        account: this.props.data.account,\n                        text: this.props.data.text,\n                        time: this.props.data.time,\n                    },\n                    text: this.state.input,\n                    updateComment: true\n                })\n            })\n            this.setState({btnVal: \"edit\"})\n        }\n    }\n\n    handleChange(evt) {\n        this.setState({input: evt.target.value});\n    }\n\n    render() {\n        console.log(this.props.data);\n        let btn = <></>\n        \n        if (this.props.user === this.props.data.account)\n            btn = <button onClick={this.editComment}>{this.state.btnVal}</button>\n        let span = (<p style={{border: '1px solid black', margin: '10px', borderRadius: '5px', width: '80%'}}>\n            <span> </span>{this.state.input}</p>)\n        if (this.state.btnVal !== \"edit\") {\n            span = (<p style={{border: '1px solid black', margin: '10px', borderRadius: '5px', width: \"80%\"}}>Edit:<input style={{border: '1px solid black', borderRadius: '5px', width: \"inherit\"}} onChange={this.handleChange} value={this.state.input}></input></p>);\n        }\n        return (<div style={{display: \"flex\", flexDirection: \"row\"}}>{span}{btn}</div>)\n    }\n}\n\n\n\n\nclass Articlesbody extends Component {\n    state={Keywords:\"\"}\n\n    handleComment=(evt, id)=> {\n        let obj = {}\n        obj[id + \"-comment\"] = evt.target.value;\n        this.setState(obj);\n    }\n    \n    handleCommentSubmit=(id)=>{\n        let comment = this.state[id + \"-comment\"];\n        if (comment !== undefined) {\n            fetch(url(\"/articles/\" + id), {\n                method: \"PUT\",\n                headers: { 'Content-Type': 'application/json' },\n                credentials: 'include',\n                body: JSON.stringify({\n                    commentId: Date.now(),\n                    text: comment,\n                    from: this.props.userInfo.accountname\n                })\n            }).then(res => {\n                if (res.status === 200) return res.json();\n                else return res.text();\n            }).then(res => {\n                if (res.result && res.result === \"success\") {\n                    this.props.updatepost(res.posts);\n                    let obj = {};\n                    obj[id + \"-comment\"] = \"\";\n                    this.setState(obj);\n                }\n            })\n        }\n    }\n    handleEditChange=(evt, id)=> {\n        let obj = {}\n        obj[id + \"-edit\"] = evt.target.value;\n        this.setState(obj);\n    }\n\n\n      filterkeywords(keywords,author, content){\n         \n        if (author.includes(keywords)){\n            return true\n        }\n        if (content.includes(keywords)){\n            return true\n        }\n        else{\n            return false\n        } \n\n      } \n      handleEditSubmit=(id) =>{\n        if (this.state[id + \"-edit\"] !== undefined) {\n            fetch(url(\"/articles/\" + id), {\n                method: \"PUT\",\n                headers: { 'Content-Type': 'application/json' },\n                credentials: 'include',\n                body: JSON.stringify({text: this.state[id + \"-edit\"]})\n            }).then(res => {\n                if (res.status === 200) return res.json();\n                else return res.text();\n            }).then(res => {\n                if (res.result && res.result === \"success\") {\n                    this.props.updatepost(res.posts);\n                    let obj = {}; obj[id + \"-edit\"] = undefined;\n                    this.setState(obj);\n                }\n            })\n        }\n    }\n   \n     dosearch=(evt)=>{\n         this.setState({Keywords:evt.target.value})\n     }\n\n    render() {\n        return(\n            <div>\n                <div>\n                    <input id=\"search\"  onChange={this.dosearch}    ref={(c)=>this.feed=c} className=\"feed\" type=\"text\" placeholder=\"search key words\" onChange={this.dosearch}/>\n                </div>\n                <div id=\"searchPost\">\n                    <table>\n                     {this.props.Presentpost.map(ele => {\n                     let comments = []\n                     for (let comment of ele.comment) {\n                        comments.push(<Comment pid={ele._id} key={comment.account + \"-\" + comment.text + \"-\" + comment.time} user={this.props.userInfo.accountname} data={comment}/>)\n                    }\n                    if(!this.filterkeywords(this.state.Keywords,ele.author,ele.content))\n                        return null \n                    return (<div className=\"post\" key={ele.author+'-'+ele.created}>\n                    <img  alt=\"\" src={ele.image}/>\n                    <div >\n                        <p>{ele.title}<b>(Username: {ele.author})</b> {ele.time}</p>\n                        <p>{ele.content}</p>\n                        <div style={{border: '1px solid black', borderRadius: '10px'}}>\n                        {comments}\n                        <input value={this.state[ele._id+\"-comment\"]} onChange={(evt) => this.handleComment(evt, ele._id)} className={'PostComment'} placeholder=\"leave your comment here\"></input>\n                        <button onClick={() => this.handleCommentSubmit(ele._id)} variant='outlined' className=\"btn\" >Comment</button>{\" \"}\n                        {this.state[ele._id+\"-edit\"] === undefined ? null : <div>\n                            <input value={this.state[ele._id+\"-edit\"]} \n                                onChange={(evt) => this.handleEditChange(evt, ele._id)}></input>\n                            <button className=\"btn\"  onClick={()=>this.handleEditSubmit(ele._id)}>Done</button>\n                            <button className=\"btn\"  onClick={()=>{\n                                let obj = {}; obj[ele._id+\"-edit\"] = undefined;\n                                this.setState(obj)} }>Cancel</button></div>}\n\n                        <button onClick={()=>{\n                                let obj = {}; \n                                obj[ele._id+\"-edit\"] = ele.content;\n                                this.setState(obj);\n                            }} variant='outlined' className='btn'>Edit Article</button>\n                        </div>\n                        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRRqUQzzHh5Wgja4XaUTpJ4ZbncfrQaxizP7A&usqp=CAU'></img>\n                    </div>\n                </div>)\n                    \n                \n            })}\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default connect(\n    (state) => {\n        return {\n            posts:state.posts,\n            users:state.users,\n            userInfo:state.userInfo,\n            Presentpost:state.Presentpost,\n            followers:state.followers \n        }\n    },  \n    dispatch =>{\n        return{\n            getpost:posts=>dispatch(getpost(posts)),\n            updatepost:post =>dispatch(updatepost(post))\n        }\n    }\n)(Articlesbody)","import React,{Component} from 'react'\nimport {connect} from 'react-redux'\nimport { addpost, getpost, clearposts,updatepost} from '../../actions'\nimport {url} from '../../Fetch' \n\n\nexport class PostArticle extends Component {\n    componentDidMount(){\n        this.updatePosts()\n    }\n    // constructor(props) {\n    //     super(props)\n    //     this.updatePosts = this.updatePosts.bind(this)\n    // }\n    state={myself_post:\"\", title: \"\", content: \"\",errMsg: \"\",tmpImage: \"/paste.png\",}\n    \n    clear=()=>{\n        const{words}=this\n        words.value=\"\"\n    }\n\n    updatePosts=()=> {\n        this.props.clearposts();\n        // get own posts\n        fetch(url(\"/articles\"), {\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n        }).then(res => {\n            if (res.status === 200) return res.json();\n            else return res.text();\n        }).then(res => {\n            if (res.posts) {\n                this.props.updatepost(res.posts);\n            }\n            console.log(res);\n        })\n    }\n\n\n    clearPost=(evt)=> {\n        this.setState({content: \"\", tmpImage: \"/paste.png\"})\n    }\n\n\n\n\n    Post=()=>{\n          // TODO: image\n          console.log(this.state.content)\n          if (this.state.content !== \"\") {\n            // Do image first \n            let curImg = this.state.tmpImage === \"/paste.png\" ? \"\" : this.state.tmpImage;\n            fetch(url(\"/article\"), {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json' },\n                credentials: 'include',\n                body: JSON.stringify({\n                    account: this.props.userInfo.username,\n                    title: \"title\", //this.state.title,\n                    content: this.state.content,\n                    image: curImg\n                })\n            }).then(res => {\n                if (res.status === 200) {\n                    this.updatePosts();\n                    this.clearPost();\n                } else {\n                    this.setState({errMsg: \"bad request\"})        \n                }\n            })\n        } else {\n            this.setState({errMsg: \"PLease input some your content\"})\n        }\n       \n        \n    }\n\n    update=(evt)=>{\n       this.setState({content:evt.target.value})\n    }\n\n    \n\n    render() {\n        return (\n            <div>\n                <textarea onChange={this.update} value={this.state.content}  ref={(c)=>this.words=c} className=\"post\" cols=\"50\" rows='9' placeholder=\"Enter your new post here!\"></textarea><br/>\n                <input className='btn' type='file' id=\"uploadimg\"/><br/><br/>\n            <button onClick={this.Post} type='button' className='btn'>Push</button>\n            <button onClick={this.clear} type='button' className='btn'>Clear</button>\n         <br></br> <br></br>\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default connect( \n    (state) => {\n        return {\n            user : state.user,\n            posts:state.posts,\n            userInfo:state.userInfo\n        }\n    }, \n    (dispatch) => {\n        return {\n            addpost:(post)=>dispatch(addpost(post)),\n            getpost:(posts)=>dispatch(getpost(posts)),\n            clearposts:()=>dispatch(clearposts()),\n            updatepost:(post)=>dispatch(updatepost(post))\n        }\n    }\n)(PostArticle)","import React from 'react'\nimport Articlebody from './Articlebody'\nimport PostArticle from './PostArticle'\nexport default function article() {\n    return (\n        <div>\n            <PostArticle/>\n             <br/><br/>\n            <Articlebody/>\n        </div>\n\n    )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Headline from './Headline'\nimport Navigation from './Navigation'\nimport Article from '../article/Article'\nimport Following from './Following'\n//basic structure for main page\nexport const Main = () => (\n    <div className=\"bigBox\">\n    <header>\n        <Navigation/>\n    </header>\n    <h1>Welcome to Main Page</h1>\n    <table >\n\t\t<th>\n\t\t\t <Headline/>\t\n\t\t\t <Following followings={require('../../data/followers.json').followings}/>\n\t\t</th>\n\t\t<th>\n\t\t\t<Article/>\n\t\t</th>\n    \n\t\t   </table>\n</div>\n)\n\nexport default connect(\n)(Main)\n\n//add new user to users","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {Link } from 'react-router-dom'\n\nexport  class NavPro extends Component {\n   \n    render() {\n        return (\n            <div>\n\n                <Link className=\"btn\" to={'./main'}>Main</Link>\n\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state=>{\n        return{\n            isLogin: state.isLogin,\n            \n        }\n    },\n    dispatch =>{\n        return{\n      \n        }\n      \n    }\n\n\n\n)(NavPro)","import React from 'react'\nimport { connect } from 'react-redux'\n\nexport const Avator = () => (\n    <div>\n    \t<img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRsqz9MnPJ35eUCWZeGAQc3UcQQ982UywRBKA&usqp=CAU'/>\n    \t<br/>\n    \t<input className=\"btn\" type=\"file\"/> \n    \t<br/><br/><br/>\n    </div>\n)\n//profile avator \n\nexport default connect(\n)(Avator)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Nav from './NavPro'\nimport Avator from './Avator'\nimport { changepage,changetomain,updateusers,getUsers, getpost} from '../../actions'\nimport {url} from '../../Fetch'\n\n\n\nexport  class profile extends Component {\n\n    \n    state={errInfo:\"\",newNameVal:\"\",newEmailVal:\"\",newPhoneVal:\"\",newZipcodeVal:\"\",newBirthVal:\"\",newPasswordVal:\"\",\n    newPassword:\"*\".repeat(this.props.userInfo.password),\n    updatedName:this.props.userInfo.username,updatedEmail:this.props.userInfo.email,updatedPhone:this.props.userInfo.phone,updatedZipcode:this.props.userInfo.zipcode,updateBirth:this.props.userInfo.birthdate,\n    updatedPassword:\"*\".repeat(this.props.userInfo.password),\n    BIRTH:\"1999-12-21\",\n    PASSWORD:\"*\"\n}\n\n    handleChangeUserName=(evt)=>{\n        this.setState({newNameVal:evt.target.value})\n    }\n    handleChangeEmail=(evt)=>{\n        this.setState({newEmailVal:evt.target.value})\n    }\n    handleChangePhone=(evt)=>{\n        this.setState({newPhoneVal:evt.target.value})\n    }\n    handleChangeBirth=(evt)=>{\n        this.setState({newBirthVal:evt.target.value})\n    }\n    handleChangeZipcode=(evt)=>{\n        this.setState({newZipcodeVal:evt.target.value})\n    }\n    handleChangePassword=(evt)=>{\n        this.setState({newPasswordVal:evt.target.value})\n    }\n  \n\n    CheckisValidaty=()=>{\n\n       \n        // this.setState({\n        //     updatedName:\"\",updatedEmail:\"\",updatedPhone:\"\",updatedZipcode:\"\",updatedPassword:\"\"\n        // })\n\n\n        const{Name,Email,Phone,Password,Zipcode,Birth,Cp}=this\n       \n        var mark=true;\n        var notice=\"\"\n/*         if(Name.validity.patternMismatch)\n         {       \n          notice+=\"Please input a name using letter or numbers with letter start only, \";mark=false  \n          \n         } */\n         if(Email.validity.patternMismatch)\n         {\n            notice+=\"please input a email such as a@b.com, \"; mark=false  \n         }\n     \n         if(Phone.validity.patternMismatch)\n         {\n             notice+=\"please input phone number such as 111-111-1111, \"; mark=false  \n         }\n      \n         if(Zipcode.validity.patternMismatch)\n         {\n             notice+=\"please input a zipcode contains five digits, \";mark=false  \n         }\n     \n         if(this.state.PASSWORD!==this.state.CP)\n         {\n          this.setState({ERROR:\"Password must be matched\"})\n             mark=false  \n         }\n        \n         if (mark) {\n            let obj = {}\n           /*  if (this.state.newNameVal !== \"\") {\n              this.setState({updatedName:this.state.newNameVal})\n              fetch(url(\"/username\"), {\n                method: \"PUT\",\n                credentials: 'include',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({username: this.state.newNameVal})\n              })\n              obj['username'] = this.state.newNameVal;\n            } */\n            if (this.state.newEmailVal !== \"\") {\n              this.setState({updatedEmail: this.state.newEmailVal})\n              obj['email'] = this.state.newEmailVal;\n              fetch(url(\"/email\"), {\n                method: \"PUT\",\n                credentials: 'include',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({email: this.state.newEmailVal})\n              })\n            }\n            if (this.state.newPhoneVal !== \"\") {\n              this.setState({updatedPhone: this.state.newPhoneVal})\n              fetch(url(\"/phone\"), {\n                method: \"PUT\",\n                credentials: 'include',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({phone: this.state.newPhoneVal})\n              })\n              obj['phone'] = this.state.newPhoneVal;\n            }\n            if (this.state.newZipcodeVal !== \"\") {\n              this.setState({updatedZipcode:this.state.newZipcodeVal})\n              fetch(url(\"/zipcode\"), {\n                method: \"PUT\",\n                credentials: 'include',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({zipcode: this.state.newZipcodeVal})\n              })\n              obj['zipcode'] = this.state.newZipcodeVal;\n            }\n/*             if (this.state.newPasswordVal!== \"\") {\n              let oldpswd = '*'.repeat(this.props.userInfo['password'].length);\n              let newpswd = '*'.repeat(this.state.newPasswordVal.length);\n              fetch(url(\"/password\"), {\n                method: \"PUT\",\n                credentials: 'include',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({password: this.state.newPasswordVal})\n              })\n              this.setState({updatedPassword: newpswd})\n              obj['password'] = this.state.newPasswordVal;\n            } */\n            this.props.updateusers(obj);\n          }\n          else{\n              this.setState({errInfo:notice})\n          }\n\n        \n         \n        \n\n    }\n\n    render() {\n        return (\n            <div className=\"bigBox\">\n              <Nav/>\n           <h1>Welcome to Profile page</h1>\n           <Avator/>\n        <div>\n           \n        </div>\n        \n<div>\n\n</div>\n\n<form>\n\n <label className=\"instruction\">Username:</label>\n   <br></br>\n        <span id=\"testname\">{this.state.updatedName}</span>  <br></br>\n  \n     \n  \n \n<label className=\"instruction\">Email adress:</label><br/>\n   <div className=\"userinput\">\n        <input ref={(c)=>this.Email = c }  value={this.state.newEmailVal} onChange={this.handleChangeEmail}  className=\"userinput\" name=\"email\" type=\"email\" placeholder=\"a@b.com\" pattern=\"^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$\" required/>\n        <span id=\"testemail\">{this.state.updatedEmail}</span>  \n    \n\n    </div>\n\n\n    <label className=\"instruction\">Phone number:</label><br/>\n   <div className=\"userinput\">\n        <input ref={(c)=>this.Phone = c }  value={this.state.newPhoneVal} onChange={this.handleChangePhone}  className=\"userinput\" name=\"phone\" type=\"tel\" placeholder=\"000-000-0000\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required/>\n        <span id=\"testphone\">{this.state.updatedPhone}</span>  \n    \n    </div>\n\n    <label className=\"instruction\">Date Of Birth:</label><br/>\n   <div className=\"userinput\">\n        <input ref={(c)=>this.Birth = c }  value={this.state.newBirthVal} onChange={this.handleChangeBirth}  className=\"userinput\" name=\"birth\" type=\"date\" placeholder=\"01/02/20\" pattern=\"\\d\\d\\d\" required/>\n        <span id=\"testphone\">{this.state.updateBirth}</span> \n\n        <span >{this.state.BIRTH}</span>\n    </div>\n\n    <label className=\"instruction\">Zipcode:</label><br/>\n   <div className=\"userinput\">\n        <input ref={(c)=>this.Zipcode = c }  value={this.state.newZipcodeVal} onChange={this.handleChangeZipcode} className=\"userinput\" name=\"zipcode\" type=\"text\" placeholder=\"00000\" pattern=\"[0-9]{5}\" required/>\n\n        <span id=\"testzipcode\">{this.state.updatedZipcode}</span> \n    </div>\n\n    <label className=\"instruction\">Password:</label><br/>\n   <div className=\"userinput\">\n        <input ref={(c)=>this.Password = c }  value={this.state.newPasswordVal} onChange={this.handleChangePassword}   className=\"userinput\" name=\"password\" type=\"password\" placeholder=\"****\" required />\n        <span >{this.state.updatedPassword}</span> \n        <span>{this.state.PASSWORD}</span>\n    </div>\n\n\n    <label className=\"instruction\">Confirmation Password:</label><br/>\n   <div className=\"userinput\">\n        <input ref={(c)=>this.Cp= c } className=\"userinput\" name=\"confirmation_password\" type=\"password\" placeholder=\"****\" required/>\n        <span >{this.state.updatedPassword}</span> \n        <span>{this.state.PASSWORD}</span>\n      \n    </div>\n\n\n <div className=\"Button\">\n <input className=\"btn\" type=\"button\" value=\"Submit\" onClick={ this.CheckisValidaty} />\n <input className=\"btn\" type=\"reset\" value=\"Clear\" />\n <div className=\"error\">{this.state.errInfo}</div>\n  </div>\n \n   \n\n</form>\n                    \n </div>\n        )\n    }\n}\n\n\nexport default connect(\n\n    state =>{\n        return {\n            user:state.user,\n            errUpdate:state.errUpdate,\n            isLogin: state.isLogin,\n            isprofile:state.isprofile,\n            userInfo:state.userInfo,\n            users:state.users,\n            posts:state.posts\n    \n        }},\n        (dispatch) =>{\n            return {\n                changepage: () => dispatch(changepage()),\n                addRegister:(user)=>dispatch({type:\"allow_register\",user})  ,  \n              updateusers:(user)=>dispatch(updateusers(user)),\n              getUsers: (users) => dispatch(getUsers(users)),\n              getpost:(posts)=>dispatch(getpost(posts))\n            }\n        }\n    \n    \n        )(profile)","\n\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\n\nimport { connect } from 'react-redux'\n\nimport React, { Component } from 'react'\n\nimport Landing from './components/auth/Landing'\n\nimport Main from './components/main/main'\nimport  Profile from './components/profile/profile'\nexport  class App extends Component {\n    render() {\n        return (　　\n          <Router>\n            \n            <Switch>\n              <Route exact path={\"/\"} render={()=> {\n                return this.props.isLogin ? <Redirect to=\"/main\"/> : <Landing />\n              }}/>  \n                \n              <Route exact path={\"/main\"} render={()=> {\n                return this.props.isLogin? <Main/> : <Redirect to=\"/\"/>\n              }}/>  \n  \n             <Route exact path={\"/profile\"} render={()=> {\n             return this.props.isLogin ? <Profile/> : <Redirect to=\"/\"/>\n              }}/>  \n            </Switch>\n          </Router>\n      \n        )\n    }\n}\n\n\nexport default connect(\n\n    state =>{\n        return {\n            isLogin:state.isLogin,\n            isprofile:state.isprofile,\n            ismain:state.ismain\n        }}\n        )(App)\n","\n\nimport './index.css'\nimport React from 'react'\nimport { render } from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport {createLogger} from 'redux-logger'\nimport { createStore, applyMiddleware } from 'redux'\n\n\nimport Reducer from './reducers'\nimport App from './App'\n\nconst logger = createLogger()\nconst store = createStore(Reducer, applyMiddleware(logger))\nrender(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('app')\n) "],"sourceRoot":""}